plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.30'
    id 'com.google.gms.google-services'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
android {

    sourceSets {
        main { java.srcDirs = ['src/main/java'] }
        test { java.srcDirs = ['src/test/java'] }
        androidTest { java.srcDirs = ['src/androidTest/java'] }
    }

    signingConfigs {
        release {
            storeFile file('../keystore.jks')
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            } else {
                storePassword System.getenv("SIGNING_STORE_PASSWORD")
                keyAlias System.getenv("SIGNING_KEY_ALIAS")
                keyPassword System.getenv("SIGNING_KEY_PASSWORD")
            }
        }
    }
    compileSdkVersion 33

    def HOST_URI = "HOST_URI"
    def API_URI = "API_URI"
    def ISSUER_URI = "ISSUER_URI"
    def CLIENT_ID = "CLIENT_ID"
    def REDIRECT_URI_LOGIN = "REDIRECT_URI_LOGIN"
    def REDIRECT_URI_LOGOUT = "REDIRECT_URI_LOGOUT"
    def API_SCOPES = "SCOPES"
    def GRAVATAR_URI = "GRAVATAR_URI"


    def CONFIG = { k -> "\"${project.properties.get(k)}\"" }
    def CONFIG_RAW = { k -> "${project.properties.get(k)}" }

    defaultConfig {
        applicationId "ru.rtuitlab.itlab"
        minSdk 26
        targetSdkVersion 33
        versionCode 7
        versionName "2.0.1"

        manifestPlaceholders = [
                'appAuthRedirectScheme': 'ru.rtuitlab.itlab'
        ]

        testInstrumentationRunner "ru.rtuitlab.itlab.HiltTestRunner"
        signingConfig signingConfigs.release

        buildConfigField("String", CLIENT_ID, CONFIG("client.id"))
        buildConfigField("String", REDIRECT_URI_LOGIN, CONFIG("redirect.uri.login"))
        buildConfigField("String", REDIRECT_URI_LOGOUT, CONFIG("redirect.uri.logout"))
        buildConfigField("String[]", API_SCOPES, CONFIG_RAW("api.scopes"))
        buildConfigField("String", GRAVATAR_URI, CONFIG("gravatar.uri"))

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/room_schemas".toString()]
            }
        }

    }

    flavorDimensions "api"
    productFlavors {
        devApi {
            dimension "api"
            applicationIdSuffix ".dev"

            resValue("string", HOST_URI, CONFIG("debug.host.uri"))
            buildConfigField("String", API_URI, CONFIG("debug.api.uri"))
            buildConfigField("String", ISSUER_URI, CONFIG("debug.issuer.uri"))
        }
        prodApi {
            dimension "api"
            resValue("string", HOST_URI, CONFIG("release.host.uri"))
            buildConfigField("String", API_URI, CONFIG("release.api.uri"))
            buildConfigField("String", ISSUER_URI, CONFIG("release.issuer.uri"))
        }
    }

    buildTypes {

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    buildToolsVersion '32.0.0'
    namespace 'ru.rtuitlab.itlab'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.activity:activity-compose:1.3.0-alpha02'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    testImplementation 'com.google.truth:truth:1.1.3'
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    implementation 'androidx.test:runner:1.4.0'
        // Hilt
        androidTestImplementation("com.google.dagger:hilt-android-testing:2.38.1")
        kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_version")

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
        // Compose Material 3 still lacks some composables (like ModalBottomSheetLayout),
        // so the only option is to use it alongside M2 library. Full migration is possible
        // only when all features used in ITLab-Android are added to M3 library
        implementation("androidx.compose.material3:material3:1.1.0-alpha01")
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha10"
    implementation 'com.google.accompanist:accompanist-flowlayout:0.20.0'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0"
    implementation 'com.google.accompanist:accompanist-pager:0.27.0'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.27.0'
    implementation "com.google.accompanist:accompanist-swiperefresh:0.21.1-beta"
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.27.0'
    implementation 'com.valentinilk.shimmer:compose-shimmer:1.0.3'

    // Room
    implementation("androidx.room:room-runtime:2.5.0-beta01")
    kapt("androidx.room:room-compiler:2.5.0-beta01")
    implementation("androidx.room:room-ktx:2.5.0-beta01")

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation:1.0.0"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha06"

    // Markdown
    implementation "io.noties.markwon:core:4.6.2"
    implementation "io.noties.markwon:image:4.6.2"
    implementation "io.noties.markwon:ext-tables:4.6.2"

    // OpenID auth
    implementation 'net.openid:appauth:0.11.1'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    // Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"

    // Time
    implementation 'org.jetbrains.kotlinx:kotlinx-datetime:0.3.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:28.4.2')
    implementation 'com.google.firebase:firebase-messaging-ktx:22.0.0'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Splash
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'

    //Coil
    implementation("io.coil-kt:coil-compose:2.1.0")

    // Reflection
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}