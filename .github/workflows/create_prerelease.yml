name: Create prerelease of app

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-dev

jobs:
  build_release_apk:
    name: Generate Release APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Decode Keystore
        run: echo ${{ secrets.KEYSTORE }} | base64 --decode > keystore.jks

      - name: Assemble Release
        run: ./gradlew :app:assembleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Release_Build
          path: app/build/outputs/apk/release/app-release.apk
  create_release:
    needs: [build_release_apk]
    runs-on: ubuntu-latest
    name: Create Pre Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Pre Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body_path: ./.github/contents/release.md
          draft: false
          prerelease: true

      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: Release_Build
          path: app/artifacts

      - name: Upload our Artifact Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/artifacts/app-release.apk
          asset_name: RTUITLab.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: itlab-mobile-apks
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://files.rtuitlab.dev/logo/logo.png
          SLACK_TITLE: |
            :tada: New release ${{ github.ref_name }} is already available! :tada:
          SLACK_MESSAGE: Visit <${{ steps.create_release.outputs.html_url }}|this page> to see what's new
          SLACK_FOOTER: 
          SLACK_USERNAME: RTUITLab
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  build_debug_apk:
    name: Generate Debug APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Assemble Debug
        run: ./gradlew :app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Debug_Build
          path: app/build/outputs/apk/debug/app-debug.apk
